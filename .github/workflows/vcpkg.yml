name: Vcpkg Build

on:
  # 每个月 1 号 0 点
  schedule:
    - cron: '0 0 1 * *'
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-24.04
          - ubuntu-22.04
          - macos-15
          - macos-14
          - windows-2022
          - windows-2019
        libs:
          - vulkan-hpp glm glfw3 stb glad[extensions] openssl[tools] curl[openssl,brotli,c-ares,http2,tool] protobuf benchmark gtest glog breakpad crashpad giflib
        ffmpeg:
          - opengl,ass,bzip2,freetype,fribidi,zlib,gpl,ffmpeg,ffplay,ffprobe

    steps:
      - name: Install custom vcpkg
        uses: RealChuan/install-vcpkg@main

      - name: Install dependencies on windows
        if: startsWith(matrix.os, 'windows')
        shell: bash
        run: |
          choco install ninja
          ninja --version
          cmake --version
          vcpkg install ${{ matrix.libs }} ffmpeg[${{ matrix.ffmpeg }},amf,nvcodec,qsv] --triplet x64-windows \
            || (cat C:/vcpkg/installed/vcpkg/issue_body.md && exit 1)

      - name: Install dependencies on macos
        if: startsWith(matrix.os, 'macos')
        shell: bash
        run: |
          brew install ninja nasm python-setuptools
          ninja --version
          cmake --version
          clang --version
          vcpkg install ${{ matrix.libs }} ffmpeg[${{ matrix.ffmpeg }}] --triplet x64-osx \
            || (cat /usr/local/share/vcpkg/installed/vcpkg/issue_body.md && exit 1)
          vcpkg install ${{ matrix.libs }} ffmpeg[${{ matrix.ffmpeg }}] --triplet arm64-osx \
            || (cat /usr/local/share/vcpkg/installed/vcpkg/issue_body.md && exit 1)

      - name: Install dependencies on ubuntu
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build nasm autopoint gperf libgl1-mesa-dev \
            libxinerama-dev libxcursor-dev xorg-dev libglu1-mesa-dev libltdl-dev
          ninja --version
          cmake --version
          gcc --version
          vcpkg install ${{ matrix.libs }} ffmpeg[${{ matrix.ffmpeg }},amf,nvcodec] --triplet x64-linux \
            || (cat /usr/local/share/vcpkg/installed/vcpkg/issue_body.md && exit 1)

      - name: 7-zip windows vcpkg
        if: startsWith(matrix.os, 'windows')
        shell: bash
        run: |
          7z a -t7z -r -mx=9 -mmt ${{ matrix.os }}-vcpkg-installed.7z C:/vcpkg/installed
          7z a -t7z -r -mx=9 -mmt ${{ matrix.os }}-vcpkg-downloads.7z C:/vcpkg/downloads
      - name: 7-zip macos or ubuntu vcpkg
        if: startsWith(matrix.os, 'macos') || startsWith(matrix.os, 'ubuntu')
        shell: bash
        run: |
          7z a -t7z -r -mx=9 -mmt ${{ matrix.os }}-vcpkg-installed.7z /usr/local/share/vcpkg/installed
          7z a -t7z -r -mx=9 -mmt ${{ matrix.os }}-vcpkg-downloads.7z /usr/local/share/vcpkg/downloads
      
      - name: Upload vcpkg
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-vcpkg
          path: |
            ${{ matrix.os }}-vcpkg-installed.7z
            ${{ matrix.os }}-vcpkg-downloads.7z
