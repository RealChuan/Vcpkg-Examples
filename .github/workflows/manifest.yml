name: Vcpkg manifest

on: 
  push:
    paths-ignore:
        - '.gitignore'
        - 'LICENSE'
        - 'README*'
  pull_request:
    paths-ignore:
        - '.gitignore'
        - 'LICENSE'
        - 'README*'

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        build_type:
          - "Release"
        generators:
          - "Ninja"

    steps:
      - name: Install dependencies on windows
        if: startsWith(matrix.os, 'windows')
        run: |
          choco install ninja
          ninja --version
          cmake --version
      - name: Install dependencies on macos
        if: startsWith(matrix.os, 'macos')
        shell: bash
        run: |
          brew install nasm python-setuptools
          ninja --version
          cmake --version
          clang --version
      - name: Install dependencies on ubuntu
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build nasm autopoint gperf libgl1-mesa-dev \
            libxinerama-dev libxcursor-dev xorg-dev libglu1-mesa-dev libltdl-dev
          ninja --version
          cmake --version
          gcc --version

      - uses: actions/checkout@v5
        with:
          fetch-depth: 1

      - name: Install custom vcpkg
        uses: RealChuan/install-vcpkg@main

      - name: Update vcpkg manifest baseline
        shell: bash
        run: |
          vcpkg x-update-baseline

      - name: Configure windows
        if: startsWith(matrix.os, 'windows')
        shell: pwsh
        run: |
          .\packaging\windows\Enter-VsDevShell.ps1
          cmake `
            -S . `
            -B ./build `
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} `
            -G "${{ matrix.generators }}" `
            ; if (-not $?) { Get-Content ./build/vcpkg_installed/vcpkg/issue_body.md; exit 1 }
      - name: Configure macos or ubuntu
        if: startsWith(matrix.os, 'macos') || startsWith(matrix.os, 'ubuntu')
        shell: bash
        run: |
          cmake \
            -S . \
            -B ./build \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -G "${{ matrix.generators }}" \
            || (cat ./build/vcpkg_installed/vcpkg/issue_body.md && exit 1)

      - name: 7-zip windows vcpkg
        if: startsWith(matrix.os, 'windows')
        shell: bash
        run: |
          7z a -t7z -mx=9 -mmt ${{ matrix.os }}-vcpkg-downloads.7z C:/vcpkg/downloads
      - name: 7-zip macos or ubuntu vcpkg
        if: startsWith(matrix.os, 'macos') || startsWith(matrix.os, 'ubuntu')
        shell: bash
        run: |
          7z a -t7z -mx=9 -mmt -snl ${{ matrix.os }}-vcpkg-downloads.7z /usr/local/share/vcpkg/downloads
      
      - name: Upload vcpkg
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-vcpkg
          path: |
            ${{ matrix.os }}-vcpkg-downloads.7z
